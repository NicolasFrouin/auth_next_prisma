services:
  db:
    image: mongo:8.0.3
    container_name: database
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    entrypoint:
      - bash
      - -c
      - |
        openssl rand -base64 756 > /data/replica.key
        chmod 400 /data/replica.key
        chown 999:999 /data/replica.key
        exec docker-entrypoint.sh $$@
    command: mongod --bind_ip_all --replSet rs0 --keyFile /data/replica.key
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
  db-init:
    image: mongo:8.0.3
    restart: 'no'
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    command: >
      mongosh --username ${MONGO_INITDB_ROOT_USERNAME} --password ${MONGO_INITDB_ROOT_PASSWORD} --host db:27017 --eval
      '
      rs.initiate({
        _id : "rs0",
        members: [
          { _id: 0, host: "db:27017" }
        ]
      })
      '
  visualizer:
    image: mongo-express:1.0.2-18
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_SERVER: ${MONGO_INITDB_DATABASE}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy

volumes:
  mongo_data:
